org: tradie
service: intuit-tradie-database

useDotenv: true

plugins:
  - serverless-stack-termination-protection

provider:
  name: aws
  runtime: nodejs14.x
  region: ${env:REGION}

custom:
  UniqueName: intuit-tradie-database-${sls:stage}
  DatabaseName: ${env:DB_NAME}
  DatabaseUser: ${env:DB_USERNAME}
  DatabasePassword: ${env:DB_PASSWORD}
  serverlessTerminationProtection:
    stages:
      - production
      - staging
      - develop

resources:
  Resources:
    VpcSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: database-pg
        GroupDescription: Open database for access
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: "5432"
            ToPort: "5432"
            CidrIp: 0.0.0.0/0

    Database:
      Type: AWS::RDS::DBInstance
      Properties:
        AllocatedStorage: 20
        DBInstanceClass: db.t2.small # should change for production
        Engine: postgres
        EngineVersion: 12.7
        DBName: ${self:custom.DatabaseName}
        MasterUsername: ${self:custom.DatabaseUser}
        MasterUserPassword: ${self:custom.DatabasePassword}
        StorageType: gp2
        MultiAZ: false
        PreferredBackupWindow: 09:00-10:00
        PreferredMaintenanceWindow: sun:10:00-sun:11:00
        VPCSecurityGroups:
          - Fn::GetAtt: [VpcSecurityGroup, GroupId]
        DeletionProtection: true

    SecretManager:
      Type: AWS::SecretsManager::Secret
      Properties:
        Name: ${self:custom.UniqueName}
        SecretString:
          Fn::Join:
            - ""
            - - '{"dbname":"${self:custom.DatabaseName}","username":"${self:custom.DatabaseUser}","password":"${self:custom.DatabasePassword}","host":"'
              - Fn::GetAtt:
                  - "Database"
                  - "Endpoint.Address"
              - '","port":"'
              - Fn::GetAtt:
                  - "Database"
                  - "Endpoint.Port"
              - '"}'
